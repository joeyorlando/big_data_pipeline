apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: airflow
  namespace: {{ .Values.namespace }}
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow
  namespace: {{ .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: airflow
    namespace: {{ .Values.namespace }}
roleRef:
  kind: Role # This must be Role or ClusterRole
  name: airflow # This must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: airflow-dags
spec:
  accessModes:
    - ReadOnlyMany
  capacity:
    storage: 2Gi
  hostPath:
    path: /airflow-dags/
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: airflow-logs
spec:
  accessModes:
    - ReadOnlyMany
  capacity:
    storage: 2Gi
  hostPath:
    path: /airflow-logs/
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: airflow-dags
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 2Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: airflow-logs
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: airflow
  namespace: {{ .Values.namespace }}
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    name: airflow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  labels:
    name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      name: airflow
  template:
    metadata:
      labels:
        name: airflow
    spec:
      serviceAccountName: airflow
      containers:
        - name: webserver
          image: "big_data_airflow:{{ .Values.imageTag }}"
          imagePullPolicy: Always
          ports:
            - name: webserver
              containerPort: 8080
              protocol: TCP
          args: ["webserver"]
          env:
            - name: AIRFLOW_KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: airflow-dags
              mountPath: /usr/local/airflow/dags
            - name: airflow-config
              mountPath: /usr/local/airflow/config/airflow.cfg
            - name: airflow-logs
              mountPath: /usr/local/airflow/logs
        - name: scheduler
          image: "big_data_airflow:latest"
          imagePullPolicy: Always
          args: ["scheduler"]
          env:
            - name: AIRFLOW_KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: airflow-dags
              mountPath: /usr/local/airflow/dags
            - name: airflow-config
              mountPath: /usr/local/airflow/config/airflow.cfg
            - name: airflow-logs
              mountPath: /usr/local/airflow/logs
      volumes:
        - name: airflow-dags
          hostPath:
            path: "{{ .Values.cwd }}/airflow/dags"
        - name: airflow-config
          hostPath:
            path: "{{ .Values.cwd }}/airflow/config/airflow.cfg"
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
